// Package models contains the types for schema 'custmchat'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql"
	"time"
)

// PromotionMsg represents a row from 'custmchat.promotion_msgs'.
type PromotionMsg struct {
	ID           string         `json:"id"`            // id
	EnterpriseID string         `json:"enterprise_id"` // enterprise_id
	Source       string         `json:"source"`        // source
	Content      sql.NullString `json:"content"`       // content
	ContentSdk   string         `json:"content_sdk"`   // content_sdk
	Countdown    int            `json:"countdown"`     // countdown
	Enabled      bool           `json:"enabled"`       // enabled
	Summary      string         `json:"summary"`       // summary
	Thumbnail    string         `json:"thumbnail"`     // thumbnail
	CreatedOn    time.Time      `json:"created_on"`    // created_on
	UpdatedOn    time.Time      `json:"updated_on"`    // updated_on

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the PromotionMsg exists in the database.
func (pm *PromotionMsg) Exists() bool {
	return pm._exists
}

// Deleted provides information if the PromotionMsg has been deleted from the database.
func (pm *PromotionMsg) Deleted() bool {
	return pm._deleted
}

// Insert inserts the PromotionMsg to the database.
func (pm *PromotionMsg) Insert(db XODB) error {
	var err error
	const sqlstr = `INSERT INTO custmchat.promotion_msgs (` +
		`id, enterprise_id, source, content, content_sdk, countdown, enabled, summary, thumbnail, created_on, updated_on` +
		`) VALUES (` +
		`?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?` +
		`)`

	// run query
	XOLog(sqlstr, pm.ID, pm.EnterpriseID, pm.Source, pm.Content, pm.ContentSdk, pm.Countdown, pm.Enabled, pm.Summary, pm.Thumbnail, pm.CreatedOn, pm.UpdatedOn)
	_, err = db.Exec(sqlstr, pm.ID, pm.EnterpriseID, pm.Source, pm.Content, pm.ContentSdk, pm.Countdown, pm.Enabled, pm.Summary, pm.Thumbnail, pm.CreatedOn, pm.UpdatedOn)
	if err != nil {
		return err
	}

	return nil
}

// Update updates the PromotionMsg in the database.
func (pm *PromotionMsg) Update(db XODB) error {
	var err error

	// sql query
	const sqlstr = `UPDATE custmchat.promotion_msgs SET ` +
		`enterprise_id = ?, source = ?, content = ?, content_sdk = ?, countdown = ?, enabled = ?, summary = ?, thumbnail = ?, created_on = ?, updated_on = ?` +
		` WHERE id = ?`

	// run query
	XOLog(sqlstr, pm.EnterpriseID, pm.Source, pm.Content, pm.ContentSdk, pm.Countdown, pm.Enabled, pm.Summary, pm.Thumbnail, pm.CreatedOn, pm.UpdatedOn, pm.ID)
	_, err = db.Exec(sqlstr, pm.EnterpriseID, pm.Source, pm.Content, pm.ContentSdk, pm.Countdown, pm.Enabled, pm.Summary, pm.Thumbnail, pm.CreatedOn, pm.UpdatedOn, pm.ID)
	return err
}

// Save saves the PromotionMsg to the database.
func (pm *PromotionMsg) Save(db XODB) error {
	if pm.Exists() {
		return pm.Update(db)
	}

	return pm.Insert(db)
}

// Delete deletes the PromotionMsg from the database.
func (pm *PromotionMsg) Delete(db XODB) error {
	var err error

	// sql query
	const sqlstr = `DELETE FROM custmchat.promotion_msgs WHERE id = ?`

	// run query
	XOLog(sqlstr, pm.ID)
	_, err = db.Exec(sqlstr, pm.ID)
	if err != nil {
		return err
	}

	return nil
}

// PromotionMsgsByEnterpriseID retrieves a row from 'custmchat.promotion_msgs' as a PromotionMsg.
//
// Generated from index 'idx_enterprise'.
func PromotionMsgsByEnterpriseID(db XODB, enterpriseID string) ([]*PromotionMsg, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, enterprise_id, source, content, content_sdk, countdown, enabled, summary, thumbnail, created_on, updated_on ` +
		`FROM custmchat.promotion_msgs ` +
		`WHERE enterprise_id = ?`

	// run query
	XOLog(sqlstr, enterpriseID)
	q, err := db.Query(sqlstr, enterpriseID)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	var res []*PromotionMsg
	for q.Next() {
		pm := PromotionMsg{}

		// scan
		err = q.Scan(&pm.ID, &pm.EnterpriseID, &pm.Source, &pm.Content, &pm.ContentSdk, &pm.Countdown, &pm.Enabled, &pm.Summary, &pm.Thumbnail, &pm.CreatedOn, &pm.UpdatedOn)
		if err != nil {
			return nil, err
		}

		res = append(res, &pm)
	}

	return res, nil
}

// PromotionMsgByID retrieves a row from 'custmchat.promotion_msgs' as a PromotionMsg.
//
// Generated from index 'promotion_msgs_id_pkey'.
func PromotionMsgByID(db XODB, id string) (*PromotionMsg, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, enterprise_id, source, content, content_sdk, countdown, enabled, summary, thumbnail, created_on, updated_on ` +
		`FROM custmchat.promotion_msgs ` +
		`WHERE id = ?`

	// run query
	XOLog(sqlstr, id)
	pm := PromotionMsg{}

	err = db.QueryRow(sqlstr, id).Scan(&pm.ID, &pm.EnterpriseID, &pm.Source, &pm.Content, &pm.ContentSdk, &pm.Countdown, &pm.Enabled, &pm.Summary, &pm.Thumbnail, &pm.CreatedOn, &pm.UpdatedOn)
	if err != nil {
		return nil, err
	}

	return &pm, nil
}
